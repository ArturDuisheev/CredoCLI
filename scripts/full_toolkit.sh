#!/bin/bash

# === CTF TOOLKIT - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é + –∞–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ + Telegram –æ—Ç—á—ë—Ç ===

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞ ‚Äî –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏
TG_BOT_TOKEN="7774316859:AAEQ0jt5vqdyh-rwcpfTF9Htqx_8IKfGkNo"
TG_CHAT_ID="-1002471466975"

function banner() {
  clear
  echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
  echo "‚ïë                                            ‚ïë"
  echo "‚ïë      üî• FMCREDO x MegaTeam PRESENT üî•      ‚ïë"
  echo "‚ïë                                            ‚ïë"
  echo "‚ïë          CTF TOOLKIT - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é        ‚ïë"
  echo "‚ïë                                            ‚ïë"
  echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
  echo
}

function send_telegram() {
  local file=$1
  if [[ -z "$TG_BOT_TOKEN" || -z "$TG_CHAT_ID" ]]; then
    echo "[Telegram] –¢–æ–∫–µ–Ω –∏–ª–∏ Chat ID –Ω–µ –∑–∞–¥–∞–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É."
    return
  fi
  if [[ ! -f "$file" ]]; then
    echo "[Telegram] –§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É."
    return
  fi
  echo "[Telegram] –û—Ç–ø—Ä–∞–≤–∫–∞ $file –≤ Telegram..."
  curl -s -X POST "https://api.telegram.org/bot$TG_BOT_TOKEN/sendDocument" \
    -F chat_id="$TG_CHAT_ID" \
    -F document=@"$file" > /dev/null
  echo "[Telegram] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
}

function check_install() {
  local tool=$1
  local install_cmd=$2
  if ! command -v "$tool" &> /dev/null; then
    echo "[*] –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç $tool –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    if command -v apt &> /dev/null; then
      sudo apt update && sudo apt install -y $install_cmd
    elif command -v yum &> /dev/null; then
      sudo yum install -y $install_cmd
    else
      echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä. –£—Å—Ç–∞–Ω–æ–≤–∏ $tool –≤—Ä—É—á–Ω—É—é."
      exit 1
    fi
  else
    echo "[*] –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç $tool —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
  fi
}

function nmap_scan() {
  check_install nmap nmap
  echo "–í–≤–µ–¥–∏—Ç–µ IP –∏–ª–∏ –¥–æ–º–µ–Ω –¥–ª—è —Å–∫–∞–Ω–∞:"
  read target
  local dir="reports/nmap"
  mkdir -p "$dir"
  output="${dir}/nmap_scan_${target}_$(date +%F_%T).txt"
  nmap -sC -sV -O -p- --min-rate=1000 --open -oN "$output" "$target"
  echo "–†–µ–∑—É–ª—å—Ç–∞—Ç –≤ $output"
  send_telegram "$output"
}

function linpeas_scan() {
  local dir="reports/linpeas"
  mkdir -p "$dir"
  echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º linpeas.sh..."
  if [[ ! -f linpeas.sh ]]; then
    wget -q https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh -O linpeas.sh
    chmod +x linpeas.sh
  fi
  output="${dir}/linpeas_output_$(date +%F_%T).log"
  ./linpeas.sh | tee "$output"
  send_telegram "$output"
}

function dalfox_scan() {
  check_install dalfox dalfox
  echo "–í–≤–µ–¥–∏—Ç–µ URL –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Dalfox:"
  read url
  local dir="reports/dalfox"
  mkdir -p "$dir"
  output="${dir}/dalfox_report_$(date +%F_%T).txt"
  dalfox url "$url" --output "$output" --no-color --follow-redirect --silent
  echo "–†–µ–∑—É–ª—å—Ç–∞—Ç –≤ $output"
  send_telegram "$output"
}

function sqlmap_scan() {
  check_install sqlmap sqlmap
  echo "–í–≤–µ–¥–∏—Ç–µ URL –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è sqlmap:"
  read url
  local dir="reports/sqlmap"
  mkdir -p "$dir"
  output="${dir}/sqlmap_report_$(date +%F_%T).txt"
  sqlmap -u "$url" --batch --risk=3 --level=5 --threads=10 --output-dir=sqlmap_output --flush-session > "$output" 2>&1
  echo "–†–µ–∑—É–ª—å—Ç–∞—Ç –≤ $output"
  send_telegram "$output"
}

function nikto_scan() {
  check_install nikto nikto
  echo "–í–≤–µ–¥–∏—Ç–µ URL –∏–ª–∏ IP –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Nikto:"
  read target
  local dir="reports/nikto"
  mkdir -p "$dir"
  output="${dir}/nikto_report_$(date +%F_%T).txt"
  nikto -host "$target" -output "$output" -nointeractive
  echo "–†–µ–∑—É–ª—å—Ç–∞—Ç –≤ $output"
  send_telegram "$output"
}

function virustotal_check() {
  check_install curl curl
  echo "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ VirusTotal:"
  read file
  if [[ ! -f "$file" ]]; then
    echo "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω."
    return
  fi
  echo "–í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á VirusTotal (https://www.virustotal.com/):"
  read -s apikey
  local dir="reports/virustotal"
  mkdir -p "$dir"
  local outfile="${dir}/virustotal_response_$(date +%F_%T).json"
  echo "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª $file –Ω–∞ VirusTotal..."
  response=$(curl -s --request POST \
    --url 'https://www.virustotal.com/api/v3/files' \
    --header "x-apikey: $apikey" \
    --form "file=@${file}")
  echo "$response" | tee "$outfile"
  send_telegram "$outfile"
}

function pspy_run() {
  local dir="reports/pspy"
  mkdir -p "$dir"
  echo "–°–∫–∞—á–∏–≤–∞–µ–º pspy64..."
  wget -q https://github.com/DominicBreuker/pspy/releases/latest/download/pspy64 -O pspy64
  chmod +x pspy64
  local output="${dir}/pspy64_log_$(date +%F_%T).txt"
  echo "–ó–∞–ø—É—Å–∫–∞–µ–º pspy64 (60 —Å–µ–∫—É–Ω–¥)..."
  timeout 60s ./pspy64 | tee "$output"
  send_telegram "$output"
}

function die_scan() {
  check_install die die
  echo "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ Detect It Easy:"
  read file
  if [[ ! -f "$file" ]]; then
    echo "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω."
    return
  fi
  die "$file"
}

function cyberchef_run() {
  if ! command -v docker &> /dev/null; then
    echo "[*] Docker –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å CyberChef –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è."
    return
  fi

  if docker ps --filter "name=cyberchef" --format '{{.Names}}' | grep -q cyberchef; then
    echo "CyberChef —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:9090"
  else
    echo "–ó–∞–ø—É—Å–∫–∞–µ–º CyberChef –Ω–∞ http://localhost:9090 ..."
    docker run -d -p 9090:8080 --name cyberchef gchq/cyberchef
    sleep 3
  fi

  echo "–û—Ç–∫—Ä–æ–π –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:9090"
}

function iconv_convert() {
  echo "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É:"
  read input_file
  if [[ ! -f "$input_file" ]]; then
    echo "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω."
    return
  fi

  echo "–í–≤–µ–¥–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, windows-1251):"
  read from_enc

  echo "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–µ–≤—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, UTF-8):"
  read to_enc

  local dir="reports/iconv"
  mkdir -p "$dir"
  output_file="${dir}/${input_file%.*}_converted.${input_file##*.}"

  iconv -f "$from_enc" -t "$to_enc" "$input_file" -o "$output_file"

  if [[ $? -eq 0 ]]; then
    echo "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: $output_file"
  else
    echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏."
  fi
}

function hydra_attack() {
  check_install hydra hydra
  echo "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª—å (IP –∏–ª–∏ –¥–æ–º–µ–Ω):"
  read target
  echo "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ç–æ–∫–æ–ª (ssh, ftp, http-get, http-post-form, smb –∏ —Ç.–¥.):"
  read protocol
  echo "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–ª–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π):"
  read user
  echo "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Å–ª–æ–≤–∞—Ä—é –ø–∞—Ä–æ–ª–µ–π:"
  read passlist

  local dir="reports/hydra"
  mkdir -p "$dir"

  if [[ -f "$user" ]]; then
    user_option="-L $user"
  else
    user_option="-l $user"
  fi

  output="${dir}/hydra_${protocol}_${target}_$(date +%F_%T).txt"
  echo "[*] –ó–∞–ø—É—Å–∫–∞–µ–º Hydra –Ω–∞ $protocol —Å —Ü–µ–ª—å—é $target"
  hydra $user_option -P "$passlist" -f -o "$output" "$target" "$protocol"

  echo "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª–µ $output"
  send_telegram "$output"
}

function menu() {
  while true; do
    clear
    banner
    echo "=== CTF TOOLKIT MENU ==="
    echo "1) Nmap - –±—ã—Å—Ç—Ä—ã–π –∏ –≥–ª—É–±–æ–∫–∏–π —Å–∫–∞–Ω"
    echo "2) linPEAS - privesc enumeration"
    echo "3) Dalfox - —Å–∫–∞–Ω XSS"
    echo "4) sqlmap - —Å–∫–∞–Ω SQLi"
    echo "5) Nikto - —Å–∫–∞–Ω —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"
    echo "6) VirusTotal - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞"
    echo "7) pspy64 - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    echo "8) Detect It Easy (die) - –∞–Ω–∞–ª–∏–∑ –±–∏–Ω–∞—Ä–Ω–∏–∫–æ–≤"
    echo "9) CyberChef - –∑–∞–ø—É—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å"
    echo "10) iconv - –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∫–æ–¥–∏—Ä–æ–≤–æ–∫ —Ñ–∞–π–ª–æ–≤"
    echo "11) Hydra - –ø–µ—Ä–µ–±–æ—Ä –ø–∞—Ä–æ–ª–µ–π"
    echo "0) –í—ã—Ö–æ–¥"
    echo
    read -p "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ: " choice

    case $choice in
      1) nmap_scan ;;
      2) linpeas_scan ;;
      3) dalfox_scan ;;
      4) sqlmap_scan ;;
      5) nikto_scan ;;
      6) virustotal_check ;;
      7) pspy_run ;;
      8) die_scan ;;
      9) cyberchef_run ;;
      10) iconv_convert ;;
      11) hydra_attack ;;
      0) echo "–í—ã—Ö–æ–¥..."; exit 0 ;;
      *) echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞."; sleep 2 ;;
    esac

    echo "–ù–∞–∂–º–∏ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    read
  done
}

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
mkdir -p reports

# –ó–∞–ø—É—Å–∫ –º–µ–Ω—é
menu
